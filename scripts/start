#!/usr/bin/env python

import os
import sys
import grp
from colors import bcolors

DOCKER_IMAGE    = "halsbrook"
DOCKER_NAME     = "app"
ROOT_DIR        = os.path.dirname(os.path.abspath(__file__)) # This is your Project Root

def checkImage( image, port ):

    exist = os.system("docker images -q " + image + " > /dev/null")
    os.system("cd ..")
#    ROOT_DIR        = os.path.dirname(os.path.abspath(__file__)) # This is your Project Root
    dir_app = ROOT_DIR[:-8] + "/Empyrean" 
    os.chdir(dir_app)
    os.system("ls")

    if ( exist != ""): 
        #--rm = borra instancia apenas se baja, -p setea puerto
        #--name = define name del container
        print bcolors.OKGREEN + " Levantando instancia en puerto " + port + " " + bcolors.ENDC 
        cmd     = "docker run -v " + dir_app + ":/var/www/app -d --rm -p " + port + ":80 --name " + DOCKER_NAME + " " + DOCKER_IMAGE
        print cmd
        os.system(cmd) #+ image + " > /dev/null")

    else: 
        print bcolors.FAIL + "[ ERROR ] No existe imagen de docker a usar " + bcolors.ENDC



if __name__ == "__main__":
    # -----------------------------------
    # Levantando instancia
    # ----------------------------------------------------------------------------

    print bcolors.OKGREEN +  '=' * 70 + "\n" + bcolors.ENDC
    print bcolors.OKGREEN + "\n Levantando entorno "  + bcolors.ENDC
    port = '8080'

    if len(sys.argv) == 2:
        port = sys.argv[1]

    checkImage(DOCKER_IMAGE, port) 

    print bcolors.OKGREEN + "\n\n Finalizo levante de entorno "  + bcolors.ENDC
    print bcolors.OKGREEN +  '=' * 70 + "\n" + bcolors.ENDC

# vim: se ft=python ts=4 sw=4 ai expandtab:
